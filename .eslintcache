[{"R:\\Work\\freelance\\bhrc-frontend\\src\\utils\\paint-badge.jsx":"1","R:\\Work\\freelance\\bhrc-frontend\\src\\index.tsx":"2","R:\\Work\\freelance\\bhrc-frontend\\src\\reportWebVitals.ts":"3","R:\\Work\\freelance\\bhrc-frontend\\src\\App.tsx":"4","R:\\Work\\freelance\\bhrc-frontend\\src\\i18n.ts":"5","R:\\Work\\freelance\\bhrc-frontend\\src\\config.ts":"6","R:\\Work\\freelance\\bhrc-frontend\\src\\translit.tsx":"7","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\rootReducer.ts":"8","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Main.tsx":"9","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\action-types.ts":"10","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\article-actions.ts":"11","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\home-actions.ts":"12","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\resource-action.ts":"13","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\auth-actions.ts":"14","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\settings.ts":"15","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Cover.tsx":"16","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\articleReducer.ts":"17","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\authReducer.ts":"18","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\alertReducer.ts":"19","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\resourceReducer.ts":"20","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\homepageReducer.ts":"21","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\teamReducer.ts":"22","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\settingsReducer.ts":"23","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Footer\\Footer.tsx":"24","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Header.tsx":"25","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Languages.tsx":"26","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Menu.tsx":"27","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Navigation.tsx":"28","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\NewsHeader\\NewsHeader.tsx":"29","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\ProfileHeader\\ProfileHeader.tsx":"30","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\UrbanicaHeader\\UrbanicaHeader.tsx":"31","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\About\\About.tsx":"32","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activities.tsx":"33","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activity.tsx":"34","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\ActivitiesMain.tsx":"35","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\SignIn.tsx":"36","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Team.tsx":"37","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Resources.tsx":"38","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Activity.tsx":"39","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\About.tsx":"40","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Profile\\ProfileMain.tsx":"41","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Resources\\Resources.tsx":"42","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaMain.tsx":"43","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalInput.tsx":"44","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\RegisterForm.tsx":"45","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\LoginForm.tsx":"46","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\error-actions.ts":"47","R:\\Work\\freelance\\bhrc-frontend\\src\\api.ts":"48","R:\\Work\\freelance\\bhrc-frontend\\src\\history.ts":"49","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\urbanicaReducer.ts":"50","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\urbanica-actions.ts":"51"},{"size":433,"mtime":1613772894852,"results":"52","hashOfConfig":"53"},{"size":1306,"mtime":1630857965679,"results":"54","hashOfConfig":"53"},{"size":425,"mtime":1630857950106,"results":"55","hashOfConfig":"53"},{"size":2168,"mtime":1630851211096,"results":"56","hashOfConfig":"53"},{"size":751,"mtime":1630851256824,"results":"57","hashOfConfig":"53"},{"size":591,"mtime":1630851234380,"results":"58","hashOfConfig":"53"},{"size":2987,"mtime":1630953073997,"results":"59","hashOfConfig":"53"},{"size":675,"mtime":1631398491179,"results":"60","hashOfConfig":"53"},{"size":1483,"mtime":1630880900790,"results":"61","hashOfConfig":"53"},{"size":1286,"mtime":1631396248618,"results":"62","hashOfConfig":"53"},{"size":1715,"mtime":1630954874991,"results":"63","hashOfConfig":"53"},{"size":1196,"mtime":1630954986987,"results":"64","hashOfConfig":"53"},{"size":1360,"mtime":1630957737915,"results":"65","hashOfConfig":"53"},{"size":2120,"mtime":1631392639760,"results":"66","hashOfConfig":"53"},{"size":1128,"mtime":1630955076326,"results":"67","hashOfConfig":"53"},{"size":2279,"mtime":1630964694646,"results":"68","hashOfConfig":"53"},{"size":692,"mtime":1630955489603,"results":"69","hashOfConfig":"53"},{"size":1340,"mtime":1631398439760,"results":"70","hashOfConfig":"53"},{"size":446,"mtime":1630874305970,"results":"71","hashOfConfig":"53"},{"size":742,"mtime":1630955654904,"results":"72","hashOfConfig":"53"},{"size":658,"mtime":1630957756296,"results":"73","hashOfConfig":"53"},{"size":444,"mtime":1630874410907,"results":"74","hashOfConfig":"53"},{"size":799,"mtime":1630957767173,"results":"75","hashOfConfig":"53"},{"size":3449,"mtime":1630953017364,"results":"76","hashOfConfig":"53"},{"size":1940,"mtime":1630875481398,"results":"77","hashOfConfig":"53"},{"size":1694,"mtime":1630953120638,"results":"78","hashOfConfig":"53"},{"size":1395,"mtime":1630953150636,"results":"79","hashOfConfig":"53"},{"size":1086,"mtime":1630953183424,"results":"80","hashOfConfig":"53"},{"size":1204,"mtime":1630876931876,"results":"81","hashOfConfig":"53"},{"size":934,"mtime":1630964358151,"results":"82","hashOfConfig":"53"},{"size":5456,"mtime":1631388090176,"results":"83","hashOfConfig":"53"},{"size":687,"mtime":1630877533512,"results":"84","hashOfConfig":"53"},{"size":1971,"mtime":1630964507959,"results":"85","hashOfConfig":"53"},{"size":1753,"mtime":1630953222699,"results":"86","hashOfConfig":"53"},{"size":2913,"mtime":1630955450910,"results":"87","hashOfConfig":"53"},{"size":1176,"mtime":1630955323284,"results":"88","hashOfConfig":"53"},{"size":4267,"mtime":1630955611346,"results":"89","hashOfConfig":"53"},{"size":3679,"mtime":1630955297342,"results":"90","hashOfConfig":"53"},{"size":4513,"mtime":1630955562114,"results":"91","hashOfConfig":"53"},{"size":2433,"mtime":1630964599910,"results":"92","hashOfConfig":"53"},{"size":4710,"mtime":1630964445067,"results":"93","hashOfConfig":"53"},{"size":10561,"mtime":1630959638218,"results":"94","hashOfConfig":"53"},{"size":7211,"mtime":1631399436015,"results":"95","hashOfConfig":"53"},{"size":676,"mtime":1631037235398,"results":"96","hashOfConfig":"53"},{"size":845,"mtime":1631045340937,"results":"97","hashOfConfig":"53"},{"size":732,"mtime":1631047579226,"results":"98","hashOfConfig":"53"},{"size":321,"mtime":1631127134021,"results":"99","hashOfConfig":"53"},{"size":203,"mtime":1631140947095,"results":"100","hashOfConfig":"53"},{"size":89,"mtime":1630851247291,"results":"101","hashOfConfig":"53"},{"size":607,"mtime":1631398464240,"results":"102","hashOfConfig":"53"},{"size":752,"mtime":1631398219422,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"v8h28q",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"109"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"109"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"109"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"109"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"109"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"R:\\Work\\freelance\\bhrc-frontend\\src\\utils\\paint-badge.jsx",[],["214","215"],"R:\\Work\\freelance\\bhrc-frontend\\src\\index.tsx",[],["216","217"],"R:\\Work\\freelance\\bhrc-frontend\\src\\reportWebVitals.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\App.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\i18n.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\config.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\translit.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\rootReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Main.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\action-types.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\article-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\home-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\resource-action.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\auth-actions.ts",["218"],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\settings.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Cover.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\articleReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\authReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\alertReducer.ts",["219"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/action-types\";\r\n\r\nconst initialState: any = [];\r\n\r\nexport default function(state = initialState, action: any) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter((_alert: any) => _alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\resourceReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\homepageReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\teamReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\settingsReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Footer\\Footer.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Header.tsx",["220"],"import React, { useEffect, useState, FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Menu from './Menu';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ReactComponent as Facebook } from '../../../assets/images/circled_facebook.svg';\r\nimport { ReactComponent as Instagram } from '../../../assets/images/circled_instagram.svg';\r\nimport { ReactComponent as Twitter } from '../../../assets/images/circled_twitter.svg';\r\nimport './header.scss';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\n\r\nconst Header: FunctionComponent = () => {\r\n    const { t } = useTranslation();\r\n    const [showWhite, setShowWhite] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    },[]);\r\n\r\n    const handleScroll = (e: Event) => {\r\n        if (window.scrollY > 200 && !showWhite) {\r\n            setShowWhite(true);\r\n        } else {\r\n            setShowWhite(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <div className={'header__follow'}>\r\n                <span>{t('Follow us')}</span>\r\n                <span className='icon'><Twitter/></span>\r\n                <a href='https://www.facebook.com/BakuHumanRightsClub' target={'__blanck'}>\r\n                    <span className='icon'><Facebook/></span>\r\n                </a>\r\n                <span className='icon'><Instagram/></span>\r\n            </div>\r\n            <div className={showWhite ? 'white-header header__navbar relative' : 'header__navbar relative'}>\r\n                <Menu showWhite={showWhite} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    lang: state.settings.language,\r\n    searchActive: state.settings.searchActive\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Languages.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Menu.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Navigation.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\NewsHeader\\NewsHeader.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\ProfileHeader\\ProfileHeader.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\UrbanicaHeader\\UrbanicaHeader.tsx",["221"],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\About\\About.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activities.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activity.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\ActivitiesMain.tsx",["222"],"import React, { useEffect, FunctionComponent, ReactChildren } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Element, scroller } from 'react-scroll';\r\nimport { getArticles } from '../../../redux/actions/article-actions';\r\nimport { config } from '../../../config';\r\nimport moment from 'moment';\r\nimport 'moment/locale/az';\r\nimport 'moment/locale/ru';\r\nimport { ReactComponent as SearchIcon } from '../../../assets/images/search-icon.svg';\r\nimport './activities.scss';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IArticle } from '../../../models/article';\r\n\r\ninterface ActivitiesMainProps {\r\n    children?: React.ReactElement | React.ReactElement[]\r\n}\r\n\r\nconst ActivitiesMain: FunctionComponent<ActivitiesMainProps> = props => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const { articles, lang } = useSelector((state: RootState) => ({\r\n        articles: state.news.articles,\r\n        lang: state.settings.language\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticles(1, 5));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        scroller.scrollTo('articles', {\r\n            duration: 1500,\r\n            delay: 100,\r\n            smooth: true,\r\n            block: \"center\"\r\n        });\r\n    }, []);\r\n\r\n    moment.locale(lang);\r\n    \r\n    return (\r\n        <Element name='articles' className='articles-body'>\r\n            <div className='container flex-row space-between align-top'>\r\n                <div className='articles-body__left'>\r\n                    {props.children}\r\n                </div>\r\n                <div className='articles-body__right'>\r\n                    <div className='search-block'>\r\n                        <input type='text' placeholder={t('Search')} />\r\n                        <SearchIcon className='search-icon' />\r\n                    </div>\r\n                    <div className='popular-block'>\r\n                        <h4>{t(\"Most read\")}</h4>\r\n                        {articles && articles.slice(0, 5).map((article: IArticle) =>\r\n                        <div className='post'>\r\n                            <div><img loading='lazy' src={`${config.url.IMAGE_URL}article_images/${article.picture}/original/${article.picture}`} alt={article._id} /></div>\r\n                            <div className='post__date'>\r\n                                <span className='blue-round'/> {moment(article.createdAt).format('dddd, DD MMMM')}\r\n                                <h5><Link to={`/activities/${article.path[lang]}`}>{article.name[lang]}</Link></h5>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Element>\r\n    )\r\n}\r\n\r\nexport default ActivitiesMain;\r\n","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\SignIn.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Team.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Resources.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Activity.tsx",["223","224"],"import React, { useEffect, FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport PaintBadge from '../../../utils/paint-badge';\r\nimport { ReactComponent as ClockIcon } from '../../../assets/images/clock.svg';\r\nimport { ReactComponent as LocationIcon } from '../../../assets/images/location-pin.svg';\r\nimport { getArticles } from '../../../redux/actions/article-actions';\r\nimport moment from 'moment';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TFunction } from 'i18next';\r\nimport { IHomePageBlock } from '../../../models/homepage';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IArticle } from '../../../models/article';\r\n\r\ninterface ActivityProps {\r\n    data: IHomePageBlock\r\n}\r\n\r\nconst MainActivity: FunctionComponent<ActivityProps> = ({ data }) => {\r\n    const dispatch = useDispatch();\r\n    const { articles, lang } = useSelector((state: RootState) => ({\r\n        articles: state.news.articles,\r\n        lang: state.settings.language\r\n    }));\r\n\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticles(1, 4));\r\n    }, [dispatch]);\r\n\r\n    moment.locale(lang);\r\n\r\n    return (\r\n        <div className='main-activity centered-text'>\r\n            <h1 className='main-blue-text nowrap-text title'>{data && data.title[lang]}</h1>\r\n            <div className='main-activity__background'>\r\n                <div className='opacity'/>\r\n                <div className='container'>\r\n                    <div className='container-inner'>\r\n                        <div className='flex-col flex-center small-margin-top'>\r\n                            {/* <PaintBadge title={'Activity'} /> */}\r\n                            {data && data.subtitle && <div className='main-activity__central-block'>\r\n                                <h3 className='white-text'>{data.subtitle[lang]}</h3>\r\n                            </div>}\r\n                            <div className='main-activity__activities'>\r\n                                <Carousel controls={false}>\r\n                                    <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                        {articles.map((article, i) =>\r\n                                            i < 2 && (\r\n                                                <NewsBlock article={article} lang={lang} key={article._id} t={t} />\r\n                                            )\r\n                                        )}\r\n                                        </div>\r\n                                    </Carousel.Item>\r\n                                    {articles.length > 2 && <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                        {articles.map((article, i) =>\r\n                                            i >= 2 && (\r\n                                                <NewsBlock article={article} lang={lang} key={article._id} t={t} />\r\n                                            )\r\n                                        )}\r\n                                        </div>\r\n                                    </Carousel.Item>}\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface NewsBlockProps {\r\n    article: IArticle,\r\n    lang: string,\r\n    t: TFunction\r\n}\r\n\r\nconst NewsBlock: FunctionComponent<NewsBlockProps> = ({article, lang, t}) => {\r\n    return (\r\n        <div className='activity-block noncentered-text'>\r\n            <h2 className='main-blue-text'>{article.name[lang]}</h2>\r\n            <div className='time-and-location'>\r\n                <ClockIcon />\r\n                <span>{moment(article.createdAt).format('hh:mm, DD MMMM YYYY')}</span>\r\n                {/* <LocationIcon />\r\n                <span>Baku city</span> */}\r\n            </div>\r\n            {/* <div className='activity-block__description'>\r\n                {article.shortDescription[lang]}\r\n            </div> */}\r\n            <div className='activity-block__join'>\r\n                <Link to={`/activities/${article.path[lang]}`}>{t('Read more')}</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainActivity;\r\n","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\About.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Profile\\ProfileMain.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Resources\\Resources.tsx",["225","226"],"import React, { useState, useEffect, FunctionComponent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { ReactComponent as FolderIcon } from '../../../assets/images/folder.svg';\r\nimport { ReactComponent as WordIcon } from '../../../assets/images/word-icon.svg';\r\nimport { ReactComponent as PowerPointIcon } from '../../../assets/images/powerpoint-icon.svg';\r\nimport { ReactComponent as PDFIcon } from '../../../assets/images/pdf-icon.svg';\r\nimport './resources.scss';\r\nimport { getCategoryResources, getResourcesCategories } from '../../../redux/actions/resource-action';\r\n// import moment from 'moment';\r\nimport { Element, scroller } from 'react-scroll';\r\nimport { transliterate } from '../../../translit';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IAttachment, ICategory, IPresentation, IReport, IResource, IResourceKey, ITopic, IVideo } from '../../../models/resource';\r\nimport { IMultilang } from '../../../models/multilang';\r\n\r\nconst Resources: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [categoryId, setCategoryId] = useState<string | undefined>(undefined);\r\n    const [topicId, setTopicId] = useState<string | undefined>(undefined);\r\n    const [docType, setDocType] = useState<string | undefined>(undefined);\r\n    const { lang, resources, topics } = useSelector((state: RootState) => ({\r\n        lang: state.settings.language,\r\n        resources: state.resources,\r\n        topics: state.resources.topics\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getResourcesCategories())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            dispatch(getCategoryResources(categoryId));\r\n        }\r\n    }, [categoryId, dispatch]);\r\n\r\n    useEffect(() => {\r\n        scroller.scrollTo('resources', {\r\n            duration: 1500,\r\n            delay: 100,\r\n            smooth: true,\r\n            block: \"center\"\r\n        });\r\n    }, []);\r\n    \r\n    const selectCategoryHandler = (id: string, name: string) => {\r\n        setCategoryId(id);\r\n        const tName = transliterate().transform(name, '-');\r\n        history.push(`/resources/${tName}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (resources.categories) {\r\n            for (let category of resources.categories) {\r\n                const tName = transliterate().transform(category.name[lang], '-');\r\n                if ('/resources/' + tName === location.pathname) {\r\n                    selectCategoryHandler(category._id, tName);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }, [location.pathname, lang, resources.categories])\r\n\r\n    const selectDocType = (id: string, type: string) => {\r\n        setTopicId(id);\r\n        setDocType(type);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Element name='resources' className='resources-head'>\r\n                <div className='resources-head__background'>\r\n                    {/* <div className='opacity'/> */}\r\n                    <div className='container'>\r\n                        <div className='container-inner'>\r\n                            <div className='resources-head__categories'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                    <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                            {resources.categories && (resources.categories as ICategory[]).map((category: ICategory) => (\r\n                                                <div className={category._id === categoryId ? 'category-block active' : 'category-block'} \r\n                                                    key={category._id}\r\n                                                    onClick={() => selectCategoryHandler(category._id, category.name[lang])}\r\n                                                >\r\n                                                    <h2>{category.name[lang]}</h2>\r\n                                                    <p className='category-block__description'>\r\n                                                        {category.description && category.description[lang]}\r\n                                                    </p>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </Carousel.Item>\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Element>\r\n            <div className='resources-body'>\r\n                <div className='container'>\r\n                    <div className='container-inner'>\r\n                        <div className='resources-body__topics'>\r\n                            <h2>{t(\"Category topics\")}</h2>\r\n                            {topics && topics.map((topic: ITopic) => (\r\n                                <React.Fragment key={topic._id}>\r\n                                    <div className='topic'>\r\n                                        <div className='topic__icon'><FolderIcon/></div>\r\n                                        <div className='flex-col space-between'>\r\n                                            <div className='topic__title'>{topic.name[lang]}</div>\r\n                                            <div className='topic__resources'>\r\n                                                {topic.videos && topic.videos.length !== 0 && <button onClick={() => selectDocType(topic._id, 'videos')}>\r\n                                                    {t(\"Videos\")}\r\n                                                </button>}\r\n                                                {topic.presentations && topic.presentations.length !== 0 && <button onClick={() => selectDocType(topic._id, 'presentations')}>\r\n                                                    {t(\"Presentations\")}\r\n                                                </button>}\r\n                                                {topic.reports && topic.reports.length !== 0 && <button onClick={() => selectDocType(topic._id, 'reports')}>\r\n                                                    {t(\"Reports\")}\r\n                                                </button>}\r\n                                                {topic.attachments && topic.attachments.length !== 0 && <button onClick={() => selectDocType(topic._id, 'attachments')}>\r\n                                                    {t(\"Documents\")}\r\n                                                </button>}\r\n                                                {topic.informations && topic.informations.length !== 0 && <button onClick={() => selectDocType(topic._id, 'informations')}>\r\n                                                    {t(\"Info\")}\r\n                                                </button>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className='topic__date'>\r\n                                            {moment(topic.createdAt).format(\"DD.MM.YYYY\")}\r\n                                        </div> */}\r\n                                    </div>\r\n                                    {(topic._id === topicId) && docType && <Materials materialsArray={topic[docType]} lang={lang} />}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface MaterialsProps {\r\n    materialsArray: string | IAttachment[] | IPresentation[] | IReport[] | IVideo[] | IResource[] | Date | IMultilang | undefined,\r\n    lang: string\r\n}\r\n\r\nconst Materials: FunctionComponent<MaterialsProps> = ({materialsArray, lang}) => {\r\n    return (\r\n        <div className='topic__materials'>\r\n            {(materialsArray as (IAttachment | IPresentation | IReport | IVideo | IResource)[]).map(material => {\r\n                if(material.fileLink && material.fileLink[lang]) return <Material material={material} lang={lang} key={material._id} />\r\n                else return(\r\n                    <div className='material-doc info'>\r\n                        <h3>{material.name[lang]}</h3>\r\n                        <p dangerouslySetInnerHTML={{__html: material.description[lang]}} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface MaterialProps {\r\n    lang: string,\r\n    material: IAttachment | IResource | IPresentation | IReport | IVideo\r\n}\r\n\r\nconst Material: FunctionComponent<MaterialProps> = ({material, lang}) => {\r\n    console.log('me', material);\r\n    const extention = material.fileLink[lang].split('.').pop();\r\n    switch(extention) {\r\n        case 'docx':\r\n        case 'doc':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><WordIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n                \r\n            );\r\n        case 'pdf':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><PDFIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n            );\r\n        case 'pptx':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><PowerPointIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n            );\r\n        default:\r\n            return (\r\n                <div className='material'>\r\n                    <iframe src={`${material.fileLink[lang]}&embedded=true`} width='100%' title={material.name[lang]} />\r\n                    {material.name[lang]}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Resources;","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaMain.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalInput.tsx",["227","228","229"],"import React, { FunctionComponent } from 'react';\r\nimport { WrappedFieldProps } from 'redux-form';\r\n\r\ninterface ModalInputProps extends WrappedFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    type?: string;\r\n}\r\n\r\nconst ModalInput: FunctionComponent<ModalInputProps> = (props) => {\r\n    const {\r\n        placeholder,\r\n        type,\r\n        input: { onChange },\r\n        meta: { touched, valid, error },\r\n        name,\r\n    } = props;\r\n    return (\r\n        <input className='modal-input'\r\n            placeholder={placeholder}\r\n            type={type}\r\n            onChange={onChange}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ModalInput;","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\RegisterForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\LoginForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\error-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\api.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\history.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\urbanicaReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\urbanica-actions.ts",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"230","replacedBy":"234"},{"ruleId":"232","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":8,"column":10,"nodeType":"238","messageId":"239","endLine":8,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":5,"column":1,"nodeType":"242","endLine":15,"endColumn":2},{"ruleId":"243","severity":1,"message":"244","line":20,"column":7,"nodeType":"245","endLine":20,"endColumn":9,"suggestions":"246"},{"ruleId":"236","severity":1,"message":"247","line":31,"column":11,"nodeType":"238","messageId":"239","endLine":31,"endColumn":19},{"ruleId":"236","severity":1,"message":"248","line":1,"column":47,"nodeType":"238","messageId":"239","endLine":1,"endColumn":60},{"ruleId":"236","severity":1,"message":"249","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":18},{"ruleId":"236","severity":1,"message":"250","line":7,"column":28,"nodeType":"238","messageId":"239","endLine":7,"endColumn":40},{"ruleId":"236","severity":1,"message":"251","line":16,"column":69,"nodeType":"238","messageId":"239","endLine":16,"endColumn":81},{"ruleId":"243","severity":1,"message":"252","line":68,"column":8,"nodeType":"245","endLine":68,"endColumn":55,"suggestions":"253"},{"ruleId":"236","severity":1,"message":"254","line":15,"column":17,"nodeType":"238","messageId":"239","endLine":15,"endColumn":24},{"ruleId":"236","severity":1,"message":"255","line":15,"column":26,"nodeType":"238","messageId":"239","endLine":15,"endColumn":31},{"ruleId":"236","severity":1,"message":"256","line":15,"column":33,"nodeType":"238","messageId":"239","endLine":15,"endColumn":38},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],["257"],["258"],"@typescript-eslint/no-unused-vars","'IUser' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'dispatch' is assigned a value but never used.","'ReactChildren' is defined but never used.","'PaintBadge' is defined but never used.","'LocationIcon' is defined but never used.","'IResourceKey' is defined but never used.","React Hook useEffect has a missing dependency: 'selectCategoryHandler'. Either include it or remove the dependency array.",["260"],"'touched' is assigned a value but never used.","'valid' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [handleScroll]",{"range":"265","text":"266"},"Update the dependencies array to be: [location.pathname, lang, resources.categories, selectCategoryHandler]",{"range":"267","text":"268"},[883,885],"[handleScroll]",[2869,2916],"[location.pathname, lang, resources.categories, selectCategoryHandler]"]