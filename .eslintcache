[{"R:\\Work\\freelance\\bhrc-frontend\\src\\utils\\paint-badge.jsx":"1","R:\\Work\\freelance\\bhrc-frontend\\src\\index.tsx":"2","R:\\Work\\freelance\\bhrc-frontend\\src\\reportWebVitals.ts":"3","R:\\Work\\freelance\\bhrc-frontend\\src\\App.tsx":"4","R:\\Work\\freelance\\bhrc-frontend\\src\\i18n.ts":"5","R:\\Work\\freelance\\bhrc-frontend\\src\\config.ts":"6","R:\\Work\\freelance\\bhrc-frontend\\src\\translit.tsx":"7","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\rootReducer.ts":"8","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Main.tsx":"9","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\action-types.ts":"10","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\article-actions.ts":"11","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\home-actions.ts":"12","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\resource-action.ts":"13","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\auth-actions.ts":"14","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\settings.ts":"15","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Cover.tsx":"16","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\articleReducer.ts":"17","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\authReducer.ts":"18","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\alertReducer.ts":"19","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\resourceReducer.ts":"20","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\homepageReducer.ts":"21","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\teamReducer.ts":"22","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\settingsReducer.ts":"23","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Footer\\Footer.tsx":"24","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Header.tsx":"25","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Languages.tsx":"26","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Menu.tsx":"27","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Navigation.tsx":"28","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\NewsHeader\\NewsHeader.tsx":"29","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\ProfileHeader\\ProfileHeader.tsx":"30","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\UrbanicaHeader\\UrbanicaHeader.tsx":"31","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\About\\About.tsx":"32","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activities.tsx":"33","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activity.tsx":"34","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\ActivitiesMain.tsx":"35","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\SignIn.tsx":"36","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Team.tsx":"37","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Resources.tsx":"38","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Activity.tsx":"39","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\About.tsx":"40","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Profile\\ProfileMain.tsx":"41","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Resources\\Resources.tsx":"42","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaMain.tsx":"43","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalInput.tsx":"44","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\RegisterForm.tsx":"45","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\LoginForm.tsx":"46","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\error-actions.ts":"47","R:\\Work\\freelance\\bhrc-frontend\\src\\api.ts":"48","R:\\Work\\freelance\\bhrc-frontend\\src\\history.ts":"49","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\urbanicaReducer.ts":"50","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\urbanica-actions.ts":"51","R:\\Work\\freelance\\bhrc-frontend\\src\\models\\user.ts":"52","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaCompetition.tsx":"53","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\UrbanicaGeneralForm.tsx":"54","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaInput.tsx":"55","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaTextarea.tsx":"56","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\UrbanicaBudgetForm.tsx":"57","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaSelect.tsx":"58","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\alert-actions.ts":"59","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\AlertMessage.tsx":"60","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalTextarea.tsx":"61"},{"size":433,"mtime":1613772894852,"results":"62","hashOfConfig":"63"},{"size":1425,"mtime":1631457144882,"results":"64","hashOfConfig":"63"},{"size":425,"mtime":1630857950106,"results":"65","hashOfConfig":"63"},{"size":2422,"mtime":1632690159030,"results":"66","hashOfConfig":"63"},{"size":751,"mtime":1630851256824,"results":"67","hashOfConfig":"63"},{"size":591,"mtime":1630851234380,"results":"68","hashOfConfig":"63"},{"size":2987,"mtime":1630953073997,"results":"69","hashOfConfig":"63"},{"size":675,"mtime":1631398491179,"results":"70","hashOfConfig":"63"},{"size":1483,"mtime":1630880900790,"results":"71","hashOfConfig":"63"},{"size":1447,"mtime":1632930921715,"results":"72","hashOfConfig":"63"},{"size":1715,"mtime":1630954874991,"results":"73","hashOfConfig":"63"},{"size":1196,"mtime":1630954986987,"results":"74","hashOfConfig":"63"},{"size":1360,"mtime":1630957737915,"results":"75","hashOfConfig":"63"},{"size":3525,"mtime":1632936524550,"results":"76","hashOfConfig":"63"},{"size":1425,"mtime":1632996518962,"results":"77","hashOfConfig":"63"},{"size":2279,"mtime":1630964694646,"results":"78","hashOfConfig":"63"},{"size":692,"mtime":1630955489603,"results":"79","hashOfConfig":"63"},{"size":1451,"mtime":1632838122470,"results":"80","hashOfConfig":"63"},{"size":628,"mtime":1632731968659,"results":"81","hashOfConfig":"63"},{"size":742,"mtime":1630955654904,"results":"82","hashOfConfig":"63"},{"size":658,"mtime":1630957756296,"results":"83","hashOfConfig":"63"},{"size":444,"mtime":1630874410907,"results":"84","hashOfConfig":"63"},{"size":909,"mtime":1632936994449,"results":"85","hashOfConfig":"63"},{"size":3449,"mtime":1632997393773,"results":"86","hashOfConfig":"63"},{"size":1940,"mtime":1630875481398,"results":"87","hashOfConfig":"63"},{"size":1694,"mtime":1630953120638,"results":"88","hashOfConfig":"63"},{"size":1395,"mtime":1630953150636,"results":"89","hashOfConfig":"63"},{"size":1086,"mtime":1630953183424,"results":"90","hashOfConfig":"63"},{"size":1204,"mtime":1630876931876,"results":"91","hashOfConfig":"63"},{"size":2214,"mtime":1633530021964,"results":"92","hashOfConfig":"63"},{"size":6699,"mtime":1632937006246,"results":"93","hashOfConfig":"63"},{"size":687,"mtime":1630877533512,"results":"94","hashOfConfig":"63"},{"size":1971,"mtime":1630964507959,"results":"95","hashOfConfig":"63"},{"size":1753,"mtime":1630953222699,"results":"96","hashOfConfig":"63"},{"size":2913,"mtime":1630955450910,"results":"97","hashOfConfig":"63"},{"size":4779,"mtime":1633010304404,"results":"98","hashOfConfig":"63"},{"size":4267,"mtime":1630955611346,"results":"99","hashOfConfig":"63"},{"size":3679,"mtime":1630955297342,"results":"100","hashOfConfig":"63"},{"size":4513,"mtime":1630955562114,"results":"101","hashOfConfig":"63"},{"size":2433,"mtime":1630964599910,"results":"102","hashOfConfig":"63"},{"size":4514,"mtime":1633009877632,"results":"103","hashOfConfig":"63"},{"size":10561,"mtime":1630959638218,"results":"104","hashOfConfig":"63"},{"size":8257,"mtime":1635140248342,"results":"105","hashOfConfig":"63"},{"size":710,"mtime":1635831888289,"results":"106","hashOfConfig":"63"},{"size":1498,"mtime":1635831720869,"results":"107","hashOfConfig":"63"},{"size":732,"mtime":1631047579226,"results":"108","hashOfConfig":"63"},{"size":321,"mtime":1631127134021,"results":"109","hashOfConfig":"63"},{"size":203,"mtime":1631140947095,"results":"110","hashOfConfig":"63"},{"size":89,"mtime":1630851247291,"results":"111","hashOfConfig":"63"},{"size":734,"mtime":1632403787215,"results":"112","hashOfConfig":"63"},{"size":1385,"mtime":1633532088293,"results":"113","hashOfConfig":"63"},{"size":701,"mtime":1632924095221,"results":"114","hashOfConfig":"63"},{"size":5066,"mtime":1633725648355,"results":"115","hashOfConfig":"63"},{"size":4889,"mtime":1631493989127,"results":"116","hashOfConfig":"63"},{"size":712,"mtime":1631491042403,"results":"117","hashOfConfig":"63"},{"size":670,"mtime":1631477857050,"results":"118","hashOfConfig":"63"},{"size":5600,"mtime":1632394051573,"results":"119","hashOfConfig":"63"},{"size":774,"mtime":1631493067155,"results":"120","hashOfConfig":"63"},{"size":1033,"mtime":1632733797536,"results":"121","hashOfConfig":"63"},{"size":874,"mtime":1632733689127,"results":"122","hashOfConfig":"63"},{"size":654,"mtime":1632898107626,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"v8h28q",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"129"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"129"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"129"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"129"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"129"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"129"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"129"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"129"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"129"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"129"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"129"},"R:\\Work\\freelance\\bhrc-frontend\\src\\utils\\paint-badge.jsx",[],["259","260"],"R:\\Work\\freelance\\bhrc-frontend\\src\\index.tsx",[],["261","262"],"R:\\Work\\freelance\\bhrc-frontend\\src\\reportWebVitals.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\App.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\i18n.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\config.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\translit.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\rootReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Main.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\action-types.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\article-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\home-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\resource-action.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\auth-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\settings.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Cover.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\articleReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\authReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\alertReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\resourceReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\homepageReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\teamReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\settingsReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Footer\\Footer.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Header.tsx",["263"],"import React, { useEffect, useState, FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Menu from './Menu';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ReactComponent as Facebook } from '../../../assets/images/circled_facebook.svg';\r\nimport { ReactComponent as Instagram } from '../../../assets/images/circled_instagram.svg';\r\nimport { ReactComponent as Twitter } from '../../../assets/images/circled_twitter.svg';\r\nimport './header.scss';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\n\r\nconst Header: FunctionComponent = () => {\r\n    const { t } = useTranslation();\r\n    const [showWhite, setShowWhite] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    },[]);\r\n\r\n    const handleScroll = (e: Event) => {\r\n        if (window.scrollY > 200 && !showWhite) {\r\n            setShowWhite(true);\r\n        } else {\r\n            setShowWhite(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <div className={'header__follow'}>\r\n                <span>{t('Follow us')}</span>\r\n                <span className='icon'><Twitter/></span>\r\n                <a href='https://www.facebook.com/BakuHumanRightsClub' target={'__blanck'}>\r\n                    <span className='icon'><Facebook/></span>\r\n                </a>\r\n                <span className='icon'><Instagram/></span>\r\n            </div>\r\n            <div className={showWhite ? 'white-header header__navbar relative' : 'header__navbar relative'}>\r\n                <Menu showWhite={showWhite} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    lang: state.settings.language,\r\n    searchActive: state.settings.searchActive\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Languages.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Menu.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\Header\\Navigation.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\NewsHeader\\NewsHeader.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\ProfileHeader\\ProfileHeader.tsx",["264"],"import React, { FunctionComponent, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './profileHeader.scss';\r\nimport { ReactComponent as ProfileCover } from '../../../assets/images/profile/profile-cover.svg';\r\nimport { ReactComponent as ProfileCoverEllipse } from '../../../assets/images/profile/profile-cover-ellipse.svg';\r\nimport { ReactComponent as LogoutIcon } from '../../../assets/images/profile/logout.svg';\r\nimport noAvatar from '../../../assets/images/profile/no-avatar.png';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { getProfile, signOut } from '../../../redux/actions/auth-actions';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { UserRole } from '../../../models/user';\r\n\r\nconst ProfileHeader: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const { auth, lang } = useSelector((state: RootState) => ({\r\n        auth: state.auth,\r\n        lang: state.settings.language\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile(auth.token || ''));\r\n    }, [dispatch]);\r\n\r\n    const signOutHandler = () => {\r\n        dispatch(signOut(auth.user?._id || '', auth.token || ''));\r\n    }\r\n\r\n    return (\r\n        <div className='profile-header'>\r\n            <ProfileCover />\r\n            <ProfileCoverEllipse className='ellipse' />\r\n            <div className='profile-header__avatar'>\r\n                <img src={noAvatar} alt={'test_avatar'} />\r\n            </div>\r\n            <div className='profile-header__name'>\r\n                <p className='name'>{auth.user?.profile.fullName[lang]}</p>\r\n                <p className='role'>{auth.user?.profile.role === UserRole.PARTICIPANT ? t(\"Participant\") : t(auth.user?.profile.role || \"Participant\")}</p>\r\n            </div>\r\n            <div className='profile-header__homepage'>\r\n                <Link to={`/`} />\r\n            </div>\r\n            <div className='profile-header__logout'>\r\n                <Link to={`/urbanica`} onClick={signOutHandler} >{t(\"Logout\")} <LogoutIcon /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileHeader;","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Elements\\UrbanicaHeader\\UrbanicaHeader.tsx",["265","266"],"import React, { useState, useEffect, FunctionComponent } from 'react';\r\nimport { ReactComponent as UrbanicaLeft } from '../../../assets/images/urbanica/urbanica-head-left.svg';\r\nimport { ReactComponent as UrbanicaRight } from '../../../assets/images/urbanica/urbanica-head-right.svg';\r\nimport { ReactComponent as UrbanicaLogo } from '../../../assets/images/urbanica/urbanica-logo.svg';\r\nimport { ReactComponent as UrbanicaLeftTopLeaves } from '../../../assets/images/urbanica/urbanica-left-top-leaves.svg';\r\nimport { ReactComponent as UrbanicaLeftBottomLeaves } from '../../../assets/images/urbanica/urbanica-left-bottom-leaves.svg';\r\nimport { ImArrowRight2 } from 'react-icons/im';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './urbanicaHeader.scss';\r\nimport RegisterForm from '../../../forms/RegisterForm';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { submit, FormAction } from \"redux-form\";\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { signUp, signIn, getProfile, setProcessStage } from '../../../redux/actions/auth-actions';\r\nimport { IAuthForm } from '../../../models/auth';\r\nimport LoginForm from '../../../forms/LoginForm';\r\nimport { IAuthenticate } from '../../../redux/states/auth-state';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IUser } from '../../../models/user';\r\nimport { setAlert } from '../../../redux/actions/alert-actions';\r\nimport { openModal } from '../../../redux/actions/settings';\r\n//import history from '../../../history';\r\n\r\ninterface UrbanicaHeaderProps {\r\n    submit: (form: string) => FormAction;\r\n    signUp: (user: IUser) => void;\r\n    signIn: (identifier: string, password: string) => void;\r\n    setProcessStage: (stage: number) => void;\r\n    openModal: (open?: boolean) => void;\r\n    auth: IAuthenticate;\r\n    lang: string;\r\n    modal: boolean;\r\n}\r\n\r\nconst UrbanicaHeader: FunctionComponent<UrbanicaHeaderProps> = (props) => {\r\n    const { t } = useTranslation();\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [openRegister, setOpenRegister] = useState<boolean>(false);\r\n    const { auth, lang, submit, signUp, signIn, setProcessStage, modal, openModal } = props;\r\n\r\n    useEffect(() => {\r\n        if (auth.isAuthenticated) {\r\n            openModal(false);\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile(auth.token || ''));\r\n    }, [dispatch]);\r\n\r\n    const onSubmit = (data: IAuthForm) => {\r\n        if (openRegister) {\r\n            if (data.password !== data.passwordRepeat) {\r\n                dispatch(setAlert(\"Password mismatch\", \"error\"));\r\n            } else {\r\n                if (auth.processStage === 0) {\r\n                    dispatch(setProcessStage(1));\r\n                } else {\r\n                    let user: IUser = {\r\n                        login: data.email,\r\n                        password: data.password,\r\n                        userInfo: {\r\n                            emails: [{address: data.email, verified: false}],\r\n                            profile: {\r\n                                fullName: {az: data.fullname, ru: data.fullname, en: data.fullname},\r\n                                bio: {az: data.bio, ru: data.bio, en: data.bio}\r\n                            }\r\n                        }\r\n                    };\r\n                    signUp(user);\r\n                    dispatch(setProcessStage(0));\r\n                    modalHideHandler();\r\n                }\r\n            }\r\n        } else {\r\n            signIn(data.identifier, data.password);\r\n        }\r\n    }\r\n\r\n    const modalHideHandler = () => {\r\n        openModal(false);\r\n        setOpenRegister(false);\r\n    }\r\n\r\n    const renderRegister = () => (\r\n        <>\r\n            <h1 className='white-text'>{t(\"Sign up\")}</h1>\r\n            <RegisterForm onSubmit={(data: IAuthForm) => onSubmit(data)} />\r\n            <div className='modal-content__footer'>\r\n                <button onClick={() => submit(\"RegisterForm\")} className='bhrc-btn orange-btn'><ImArrowRight2/></button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const renderLogin = () => (\r\n        <>\r\n            <h1 className='white-text'>{t(\"Sign in\")}</h1>\r\n            <LoginForm onSubmit={(data: IAuthForm) => onSubmit(data)} />\r\n            <div className='modal-content__footer'>\r\n                <button onClick={() => submit(\"LoginForm\")} className='bhrc-btn orange-btn'><ImArrowRight2/></button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className='urbanica-header'>\r\n                <div className='urbanica-header__left'>\r\n                    <UrbanicaLeft />\r\n                    <div className='urbanica-header__left__leaves'>\r\n                        <UrbanicaLeftTopLeaves className='top' />\r\n                        <UrbanicaLeftBottomLeaves className='bottom' />\r\n                    </div>\r\n                    <div className='urbanica-header__sign-up'>\r\n                        {!auth.isAuthenticated ? <button \r\n                            className='urbanica-btn sign-up'\r\n                            onClick={() => openModal(true)}\r\n                        >\r\n                            {t(\"Sign in\")}\r\n                        </button> : <button className='urbanica-btn sign-up' onClick={() => history.push('/profile')}>\r\n                            {(auth.user?.profile?.fullName || {})[lang] || (auth.user?.emails || [])[0]?.address}\r\n                        </button>}\r\n                    </div>\r\n                </div>\r\n                <div className='urbanica-header__right'>\r\n                    <UrbanicaRight />\r\n                </div>\r\n                <div className='urbanica-header__logo'>\r\n                    <UrbanicaLogo />\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                className='urbanica-modal'\r\n                centered \r\n                show={modal}\r\n                onHide={modalHideHandler}\r\n            >\r\n                <div className='modal-content__fields'>\r\n                    {openRegister ? renderRegister() : renderLogin()}\r\n                </div>\r\n                {!openRegister && <button onClick={() => setOpenRegister(true)} className='bhrc-btn blue-btn register-btn'>{t(\"Sign up\")}</button>}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    auth: state.auth,\r\n    lang: state.settings.language,\r\n    modal: state.settings.modal\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    submit,\r\n    signUp,\r\n    signIn,\r\n    setProcessStage,\r\n    openModal\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UrbanicaHeader);","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\About\\About.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activities.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\Activity.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Activities\\ActivitiesMain.tsx",["267"],"import React, { useEffect, FunctionComponent, ReactChildren } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Element, scroller } from 'react-scroll';\r\nimport { getArticles } from '../../../redux/actions/article-actions';\r\nimport { config } from '../../../config';\r\nimport moment from 'moment';\r\nimport 'moment/locale/az';\r\nimport 'moment/locale/ru';\r\nimport { ReactComponent as SearchIcon } from '../../../assets/images/search-icon.svg';\r\nimport './activities.scss';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IArticle } from '../../../models/article';\r\n\r\ninterface ActivitiesMainProps {\r\n    children?: React.ReactElement | React.ReactElement[]\r\n}\r\n\r\nconst ActivitiesMain: FunctionComponent<ActivitiesMainProps> = props => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const { articles, lang } = useSelector((state: RootState) => ({\r\n        articles: state.news.articles,\r\n        lang: state.settings.language\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticles(1, 5));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        scroller.scrollTo('articles', {\r\n            duration: 1500,\r\n            delay: 100,\r\n            smooth: true,\r\n            block: \"center\"\r\n        });\r\n    }, []);\r\n\r\n    moment.locale(lang);\r\n    \r\n    return (\r\n        <Element name='articles' className='articles-body'>\r\n            <div className='container flex-row space-between align-top'>\r\n                <div className='articles-body__left'>\r\n                    {props.children}\r\n                </div>\r\n                <div className='articles-body__right'>\r\n                    <div className='search-block'>\r\n                        <input type='text' placeholder={t('Search')} />\r\n                        <SearchIcon className='search-icon' />\r\n                    </div>\r\n                    <div className='popular-block'>\r\n                        <h4>{t(\"Most read\")}</h4>\r\n                        {articles && articles.slice(0, 5).map((article: IArticle) =>\r\n                        <div className='post'>\r\n                            <div><img loading='lazy' src={`${config.url.IMAGE_URL}article_images/${article.picture}/original/${article.picture}`} alt={article._id} /></div>\r\n                            <div className='post__date'>\r\n                                <span className='blue-round'/> {moment(article.createdAt).format('dddd, DD MMMM')}\r\n                                <h5><Link to={`/activities/${article.path[lang]}`}>{article.name[lang]}</Link></h5>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Element>\r\n    )\r\n}\r\n\r\nexport default ActivitiesMain;\r\n","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\SignIn.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Team.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Resources.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\Activity.tsx",["268","269"],"import React, { useEffect, FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport PaintBadge from '../../../utils/paint-badge';\r\nimport { ReactComponent as ClockIcon } from '../../../assets/images/clock.svg';\r\nimport { ReactComponent as LocationIcon } from '../../../assets/images/location-pin.svg';\r\nimport { getArticles } from '../../../redux/actions/article-actions';\r\nimport moment from 'moment';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TFunction } from 'i18next';\r\nimport { IHomePageBlock } from '../../../models/homepage';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IArticle } from '../../../models/article';\r\n\r\ninterface ActivityProps {\r\n    data: IHomePageBlock\r\n}\r\n\r\nconst MainActivity: FunctionComponent<ActivityProps> = ({ data }) => {\r\n    const dispatch = useDispatch();\r\n    const { articles, lang } = useSelector((state: RootState) => ({\r\n        articles: state.news.articles,\r\n        lang: state.settings.language\r\n    }));\r\n\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        dispatch(getArticles(1, 4));\r\n    }, [dispatch]);\r\n\r\n    moment.locale(lang);\r\n\r\n    return (\r\n        <div className='main-activity centered-text'>\r\n            <h1 className='main-blue-text nowrap-text title'>{data && data.title[lang]}</h1>\r\n            <div className='main-activity__background'>\r\n                <div className='opacity'/>\r\n                <div className='container'>\r\n                    <div className='container-inner'>\r\n                        <div className='flex-col flex-center small-margin-top'>\r\n                            {/* <PaintBadge title={'Activity'} /> */}\r\n                            {data && data.subtitle && <div className='main-activity__central-block'>\r\n                                <h3 className='white-text'>{data.subtitle[lang]}</h3>\r\n                            </div>}\r\n                            <div className='main-activity__activities'>\r\n                                <Carousel controls={false}>\r\n                                    <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                        {articles.map((article, i) =>\r\n                                            i < 2 && (\r\n                                                <NewsBlock article={article} lang={lang} key={article._id} t={t} />\r\n                                            )\r\n                                        )}\r\n                                        </div>\r\n                                    </Carousel.Item>\r\n                                    {articles.length > 2 && <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                        {articles.map((article, i) =>\r\n                                            i >= 2 && (\r\n                                                <NewsBlock article={article} lang={lang} key={article._id} t={t} />\r\n                                            )\r\n                                        )}\r\n                                        </div>\r\n                                    </Carousel.Item>}\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface NewsBlockProps {\r\n    article: IArticle,\r\n    lang: string,\r\n    t: TFunction\r\n}\r\n\r\nconst NewsBlock: FunctionComponent<NewsBlockProps> = ({article, lang, t}) => {\r\n    return (\r\n        <div className='activity-block noncentered-text'>\r\n            <h2 className='main-blue-text'>{article.name[lang]}</h2>\r\n            <div className='time-and-location'>\r\n                <ClockIcon />\r\n                <span>{moment(article.createdAt).format('hh:mm, DD MMMM YYYY')}</span>\r\n                {/* <LocationIcon />\r\n                <span>Baku city</span> */}\r\n            </div>\r\n            {/* <div className='activity-block__description'>\r\n                {article.shortDescription[lang]}\r\n            </div> */}\r\n            <div className='activity-block__join'>\r\n                <Link to={`/activities/${article.path[lang]}`}>{t('Read more')}</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainActivity;\r\n","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Main\\About.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Profile\\ProfileMain.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Resources\\Resources.tsx",["270","271"],"import React, { useState, useEffect, FunctionComponent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { ReactComponent as FolderIcon } from '../../../assets/images/folder.svg';\r\nimport { ReactComponent as WordIcon } from '../../../assets/images/word-icon.svg';\r\nimport { ReactComponent as PowerPointIcon } from '../../../assets/images/powerpoint-icon.svg';\r\nimport { ReactComponent as PDFIcon } from '../../../assets/images/pdf-icon.svg';\r\nimport './resources.scss';\r\nimport { getCategoryResources, getResourcesCategories } from '../../../redux/actions/resource-action';\r\n// import moment from 'moment';\r\nimport { Element, scroller } from 'react-scroll';\r\nimport { transliterate } from '../../../translit';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { IAttachment, ICategory, IPresentation, IReport, IResource, IResourceKey, ITopic, IVideo } from '../../../models/resource';\r\nimport { IMultilang } from '../../../models/multilang';\r\n\r\nconst Resources: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [categoryId, setCategoryId] = useState<string | undefined>(undefined);\r\n    const [topicId, setTopicId] = useState<string | undefined>(undefined);\r\n    const [docType, setDocType] = useState<string | undefined>(undefined);\r\n    const { lang, resources, topics } = useSelector((state: RootState) => ({\r\n        lang: state.settings.language,\r\n        resources: state.resources,\r\n        topics: state.resources.topics\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getResourcesCategories())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            dispatch(getCategoryResources(categoryId));\r\n        }\r\n    }, [categoryId, dispatch]);\r\n\r\n    useEffect(() => {\r\n        scroller.scrollTo('resources', {\r\n            duration: 1500,\r\n            delay: 100,\r\n            smooth: true,\r\n            block: \"center\"\r\n        });\r\n    }, []);\r\n    \r\n    const selectCategoryHandler = (id: string, name: string) => {\r\n        setCategoryId(id);\r\n        const tName = transliterate().transform(name, '-');\r\n        history.push(`/resources/${tName}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (resources.categories) {\r\n            for (let category of resources.categories) {\r\n                const tName = transliterate().transform(category.name[lang], '-');\r\n                if ('/resources/' + tName === location.pathname) {\r\n                    selectCategoryHandler(category._id, tName);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }, [location.pathname, lang, resources.categories])\r\n\r\n    const selectDocType = (id: string, type: string) => {\r\n        setTopicId(id);\r\n        setDocType(type);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Element name='resources' className='resources-head'>\r\n                <div className='resources-head__background'>\r\n                    {/* <div className='opacity'/> */}\r\n                    <div className='container'>\r\n                        <div className='container-inner'>\r\n                            <div className='resources-head__categories'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                    <Carousel.Item>\r\n                                        <div className='flex-row flex-center container-inner'>\r\n                                            {resources.categories && (resources.categories as ICategory[]).map((category: ICategory) => (\r\n                                                <div className={category._id === categoryId ? 'category-block active' : 'category-block'} \r\n                                                    key={category._id}\r\n                                                    onClick={() => selectCategoryHandler(category._id, category.name[lang])}\r\n                                                >\r\n                                                    <h2>{category.name[lang]}</h2>\r\n                                                    <p className='category-block__description'>\r\n                                                        {category.description && category.description[lang]}\r\n                                                    </p>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </Carousel.Item>\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Element>\r\n            <div className='resources-body'>\r\n                <div className='container'>\r\n                    <div className='container-inner'>\r\n                        <div className='resources-body__topics'>\r\n                            <h2>{t(\"Category topics\")}</h2>\r\n                            {topics && topics.map((topic: ITopic) => (\r\n                                <React.Fragment key={topic._id}>\r\n                                    <div className='topic'>\r\n                                        <div className='topic__icon'><FolderIcon/></div>\r\n                                        <div className='flex-col space-between'>\r\n                                            <div className='topic__title'>{topic.name[lang]}</div>\r\n                                            <div className='topic__resources'>\r\n                                                {topic.videos && topic.videos.length !== 0 && <button onClick={() => selectDocType(topic._id, 'videos')}>\r\n                                                    {t(\"Videos\")}\r\n                                                </button>}\r\n                                                {topic.presentations && topic.presentations.length !== 0 && <button onClick={() => selectDocType(topic._id, 'presentations')}>\r\n                                                    {t(\"Presentations\")}\r\n                                                </button>}\r\n                                                {topic.reports && topic.reports.length !== 0 && <button onClick={() => selectDocType(topic._id, 'reports')}>\r\n                                                    {t(\"Reports\")}\r\n                                                </button>}\r\n                                                {topic.attachments && topic.attachments.length !== 0 && <button onClick={() => selectDocType(topic._id, 'attachments')}>\r\n                                                    {t(\"Documents\")}\r\n                                                </button>}\r\n                                                {topic.informations && topic.informations.length !== 0 && <button onClick={() => selectDocType(topic._id, 'informations')}>\r\n                                                    {t(\"Info\")}\r\n                                                </button>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className='topic__date'>\r\n                                            {moment(topic.createdAt).format(\"DD.MM.YYYY\")}\r\n                                        </div> */}\r\n                                    </div>\r\n                                    {(topic._id === topicId) && docType && <Materials materialsArray={topic[docType]} lang={lang} />}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface MaterialsProps {\r\n    materialsArray: string | IAttachment[] | IPresentation[] | IReport[] | IVideo[] | IResource[] | Date | IMultilang | undefined,\r\n    lang: string\r\n}\r\n\r\nconst Materials: FunctionComponent<MaterialsProps> = ({materialsArray, lang}) => {\r\n    return (\r\n        <div className='topic__materials'>\r\n            {(materialsArray as (IAttachment | IPresentation | IReport | IVideo | IResource)[]).map(material => {\r\n                if(material.fileLink && material.fileLink[lang]) return <Material material={material} lang={lang} key={material._id} />\r\n                else return(\r\n                    <div className='material-doc info'>\r\n                        <h3>{material.name[lang]}</h3>\r\n                        <p dangerouslySetInnerHTML={{__html: material.description[lang]}} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface MaterialProps {\r\n    lang: string,\r\n    material: IAttachment | IResource | IPresentation | IReport | IVideo\r\n}\r\n\r\nconst Material: FunctionComponent<MaterialProps> = ({material, lang}) => {\r\n    console.log('me', material);\r\n    const extention = material.fileLink[lang].split('.').pop();\r\n    switch(extention) {\r\n        case 'docx':\r\n        case 'doc':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><WordIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n                \r\n            );\r\n        case 'pdf':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><PDFIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n            );\r\n        case 'pptx':\r\n            return (\r\n                <a href={material.fileLink[lang]} target='_blanck'>\r\n                    <div className='material-doc'>\r\n                        <div><PowerPointIcon /></div>\r\n                        <div>{material.name[lang]}</div>\r\n                    </div>\r\n                </a>\r\n            );\r\n        default:\r\n            return (\r\n                <div className='material'>\r\n                    <iframe src={`${material.fileLink[lang]}&embedded=true`} width='100%' title={material.name[lang]} />\r\n                    {material.name[lang]}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Resources;","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaMain.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalInput.tsx",["272","273","274"],"R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\RegisterForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\LoginForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\error-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\api.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\history.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\reducers\\urbanicaReducer.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\urbanica-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\models\\user.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\Pages\\Urbanica\\UrbanicaCompetition.tsx",["275"],"import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { ImArrowRight2 } from 'react-icons/im';\r\nimport UrbanicaGeneralForm from '../../../forms/UrbanicaGeneralForm';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { submit, FormAction } from \"redux-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { IBudget, IContest, IProject, IProjectBudjet } from '../../../models/urbanica';\r\nimport { getCompetition, sendProject } from '../../../redux/actions/urbanica-actions';\r\nimport { getProfile } from '../../../redux/actions/auth-actions';\r\nimport { IAuthenticate } from '../../../redux/states/auth-state';\r\nimport UrbanicaBudgetForm from '../../../forms/UrbanicaBudgetForm';\r\nimport { BsCheckCircle } from 'react-icons/bs';\r\nimport './urbanica.scss';\r\n\r\ninterface CompetitionProps {\r\n    submit: (form: string) => FormAction;\r\n    lang: string;\r\n    competition?: IContest;\r\n    response: string;\r\n    auth?: IAuthenticate;\r\n    getCompetition: () => void;\r\n    getProfile: (token: string) => void;\r\n    sendProject: (project: IProject) => void;\r\n}\r\n\r\nconst UrbanicaCompetition: FunctionComponent<CompetitionProps> = (props: CompetitionProps) => {\r\n    const { submit, competition, auth, getCompetition, sendProject, getProfile, response } = props;\r\n    const [project, setProject] = useState<IProject>({});\r\n    const [stage, setStage] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        getCompetition();\r\n        getProfile(auth?.token || '');\r\n    }, [])\r\n\r\n    const submitHandler = (data: any) => {\r\n        let pro: IProject = {\r\n            userId: auth?.user?._id,\r\n            contestId: competition?._id,\r\n            general: {\r\n                projectName: data.projectName,\r\n                neccessary: data.neccessary,\r\n                howSolve: data.howSolve,\r\n                groups: data.groups\r\n            },\r\n            details: {\r\n                goal: data.goal,\r\n                suggestions: data.suggestions,\r\n                expectedResult: data.expectedResult\r\n            }\r\n        }\r\n        setProject(pro);\r\n        setStage(1);\r\n    }\r\n\r\n    const createArray = (numb: number, data: any) => {\r\n        let i = 0;\r\n        let arr: IBudget[] = [];\r\n        while (data[`${numb}_type_${i}`]) {\r\n            arr.push({\r\n                name: data[`${numb}_type_${i}`],\r\n                period: {\r\n                    quantity: data[`${numb}_quantity_${i}`],\r\n                    unit: data[`${numb}_unit_${i}`]?.value\r\n                },\r\n                price: data[`${numb}_price_${i}`]\r\n            });\r\n            i++;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    const submitBudget = (data: any) => {\r\n        let participantsArr: IBudget[] = createArray(1, data);;\r\n        let activitiesArr: IBudget[] = createArray(2, data);\r\n        let gadjetsArr: IBudget[] = createArray(3, data);\r\n        let othersArr: IBudget[] = createArray(4, data);\r\n\r\n        let bud: IProjectBudjet = {\r\n            period: {\r\n                quantity: data.projectPeriod,\r\n                unit: data.projectPeriodSelect.value,\r\n            },\r\n            participants: participantsArr,\r\n            activities: activitiesArr,\r\n            devices: gadjetsArr,\r\n            others: othersArr            \r\n        }\r\n\r\n        setProject({...project, budget: bud});\r\n        sendProject(project);\r\n    }\r\n\r\n    return (\r\n        <div className='urbanica-competition'>\r\n            {response ? <div className='container success'>\r\n                <h1 className='main-blue-text'>\r\n                    <span className='success-icon'><BsCheckCircle /></span>\r\n                    Layihə uğurla göndərildi!\r\n                </h1>\r\n                <Link to={`/`}>Ana səhifə</Link>\r\n                <Link to={`/urbanica`}>Urbanica</Link>\r\n            </div> : stage === 0 ? <div className='container'>\r\n                <UrbanicaGeneralForm onSubmit={submitHandler} />\r\n                <div className='urbanica-competition__footer'>\r\n                    <button className='urbanica-btn sign-up' onClick={() => submit(\"UrbanicaGeneralForm\")}>\r\n                        İrəli <ImArrowRight2/>\r\n                    </button>\r\n                </div>\r\n            </div> : <div className='container'>\r\n                <UrbanicaBudgetForm onSubmit={submitBudget} />\r\n                <div className='urbanica-competition__footer'>\r\n                    <button className='urbanica-btn sign-up' onClick={() => submit(\"UrbanicaBudgetForm\")}>\r\n                        Göndər <ImArrowRight2/>\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    competition: state.urbanica.competition,\r\n    auth: state.auth,\r\n    response: state.urbanica.response\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    submit,\r\n    getCompetition,\r\n    getProfile,\r\n    sendProject\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UrbanicaCompetition);\r\n","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\UrbanicaGeneralForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaInput.tsx",["276","277","278"],"import React, { FunctionComponent } from 'react';\r\nimport { WrappedFieldProps } from 'redux-form';\r\nimport './ui.scss';\r\n\r\ninterface UrbanicaInputProps extends WrappedFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    type?: string;\r\n}\r\n\r\nconst UrbanicaInput: FunctionComponent<UrbanicaInputProps> = (props) => {\r\n    const {\r\n        placeholder,\r\n        type,\r\n        input: { onChange },\r\n        meta: { touched, valid, error },\r\n        name,\r\n    } = props;\r\n    return (\r\n        <input className='urbanica-input'\r\n            placeholder={placeholder}\r\n            type={type}\r\n            onChange={onChange}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UrbanicaInput;","R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaTextarea.tsx",["279","280","281"],"import React, { FunctionComponent } from 'react';\r\nimport { WrappedFieldProps } from 'redux-form';\r\nimport './ui.scss';\r\n\r\ninterface UrbanicaTextareaProps extends WrappedFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n}\r\n\r\nconst UrbanicaTextarea: FunctionComponent<UrbanicaTextareaProps> = (props) => {\r\n    const {\r\n        placeholder,\r\n        input: { onChange },\r\n        meta: { touched, valid, error },\r\n        name,\r\n    } = props;\r\n    return (\r\n        <textarea className='urbanica-textarea'\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UrbanicaTextarea;","R:\\Work\\freelance\\bhrc-frontend\\src\\forms\\UrbanicaBudgetForm.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\UrbanicaSelect.tsx",["282","283","284","285"],"import React, { FunctionComponent } from 'react';\r\nimport { WrappedFieldProps } from 'redux-form';\r\nimport Select from 'react-select';\r\nimport './ui.scss';\r\n\r\ninterface UrbanicaSelectProps extends WrappedFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    type?: string;\r\n    options?: any;\r\n}\r\n\r\nconst UrbanicaSelect: FunctionComponent<UrbanicaSelectProps> = (props) => {\r\n    const {\r\n        placeholder,\r\n        input: { onChange },\r\n        meta: { touched, valid, error },\r\n        name,\r\n        options,\r\n    } = props;\r\n    return (\r\n        <Select className='urbanica-select'\r\n            placeholder={''}\r\n            onChange={onChange}\r\n            name={name}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UrbanicaSelect;","R:\\Work\\freelance\\bhrc-frontend\\src\\redux\\actions\\alert-actions.ts",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\AlertMessage.tsx",[],"R:\\Work\\freelance\\bhrc-frontend\\src\\components\\UI\\ModalTextarea.tsx",["286","287","288"],"import React, { FunctionComponent } from 'react';\r\nimport { WrappedFieldProps } from 'redux-form';\r\n\r\ninterface ModalTextareaProps extends WrappedFieldProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    type?: string;\r\n}\r\n\r\nconst ModalTextarea: FunctionComponent<ModalTextareaProps> = (props) => {\r\n    const {\r\n        placeholder,\r\n        input: { onChange },\r\n        meta: { touched, valid, error },\r\n        name,\r\n    } = props;\r\n    return (\r\n        <textarea className='modal-textarea'\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ModalTextarea;",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"289","replacedBy":"293"},{"ruleId":"291","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":20,"column":7,"nodeType":"297","endLine":20,"endColumn":9,"suggestions":"298"},{"ruleId":"295","severity":1,"message":"299","line":24,"column":8,"nodeType":"297","endLine":24,"endColumn":18,"suggestions":"300"},{"ruleId":"295","severity":1,"message":"301","line":47,"column":8,"nodeType":"297","endLine":47,"endColumn":14,"suggestions":"302"},{"ruleId":"295","severity":1,"message":"299","line":51,"column":8,"nodeType":"297","endLine":51,"endColumn":18,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":1,"column":47,"nodeType":"306","messageId":"307","endLine":1,"endColumn":60},{"ruleId":"304","severity":1,"message":"308","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":18},{"ruleId":"304","severity":1,"message":"309","line":7,"column":28,"nodeType":"306","messageId":"307","endLine":7,"endColumn":40},{"ruleId":"304","severity":1,"message":"310","line":16,"column":69,"nodeType":"306","messageId":"307","endLine":16,"endColumn":81},{"ruleId":"295","severity":1,"message":"311","line":68,"column":8,"nodeType":"297","endLine":68,"endColumn":55,"suggestions":"312"},{"ruleId":"304","severity":1,"message":"313","line":15,"column":17,"nodeType":"306","messageId":"307","endLine":15,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":15,"column":26,"nodeType":"306","messageId":"307","endLine":15,"endColumn":31},{"ruleId":"304","severity":1,"message":"315","line":15,"column":33,"nodeType":"306","messageId":"307","endLine":15,"endColumn":38},{"ruleId":"295","severity":1,"message":"316","line":35,"column":8,"nodeType":"297","endLine":35,"endColumn":10,"suggestions":"317"},{"ruleId":"304","severity":1,"message":"313","line":16,"column":17,"nodeType":"306","messageId":"307","endLine":16,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":16,"column":26,"nodeType":"306","messageId":"307","endLine":16,"endColumn":31},{"ruleId":"304","severity":1,"message":"315","line":16,"column":33,"nodeType":"306","messageId":"307","endLine":16,"endColumn":38},{"ruleId":"304","severity":1,"message":"313","line":14,"column":17,"nodeType":"306","messageId":"307","endLine":14,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":14,"column":26,"nodeType":"306","messageId":"307","endLine":14,"endColumn":31},{"ruleId":"304","severity":1,"message":"315","line":14,"column":33,"nodeType":"306","messageId":"307","endLine":14,"endColumn":38},{"ruleId":"304","severity":1,"message":"318","line":15,"column":9,"nodeType":"306","messageId":"307","endLine":15,"endColumn":20},{"ruleId":"304","severity":1,"message":"313","line":17,"column":17,"nodeType":"306","messageId":"307","endLine":17,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":17,"column":26,"nodeType":"306","messageId":"307","endLine":17,"endColumn":31},{"ruleId":"304","severity":1,"message":"315","line":17,"column":33,"nodeType":"306","messageId":"307","endLine":17,"endColumn":38},{"ruleId":"304","severity":1,"message":"313","line":14,"column":17,"nodeType":"306","messageId":"307","endLine":14,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":14,"column":26,"nodeType":"306","messageId":"307","endLine":14,"endColumn":31},{"ruleId":"304","severity":1,"message":"315","line":14,"column":33,"nodeType":"306","messageId":"307","endLine":14,"endColumn":38},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],["319"],["320"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["321"],"React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'openModal'. Either include it or remove the dependency array.",["323"],["324"],"@typescript-eslint/no-unused-vars","'ReactChildren' is defined but never used.","Identifier","unusedVar","'PaintBadge' is defined but never used.","'LocationIcon' is defined but never used.","'IResourceKey' is defined but never used.","React Hook useEffect has a missing dependency: 'selectCategoryHandler'. Either include it or remove the dependency array.",["325"],"'touched' is assigned a value but never used.","'valid' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth?.token', 'getCompetition', and 'getProfile'. Either include them or remove the dependency array.",["326"],"'placeholder' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"329","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [handleScroll]",{"range":"338","text":"339"},"Update the dependencies array to be: [auth.token, dispatch]",{"range":"340","text":"341"},"Update the dependencies array to be: [auth, openModal]",{"range":"342","text":"343"},{"range":"344","text":"341"},"Update the dependencies array to be: [location.pathname, lang, resources.categories, selectCategoryHandler]",{"range":"345","text":"346"},"Update the dependencies array to be: [auth?.token, getCompetition, getProfile]",{"range":"347","text":"348"},[883,885],"[handleScroll]",[1158,1168],"[auth.token, dispatch]",[2366,2372],"[auth, openModal]",[2457,2467],[2869,2916],"[location.pathname, lang, resources.categories, selectCategoryHandler]",[1554,1556],"[auth?.token, getCompetition, getProfile]"]